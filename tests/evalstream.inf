! eval() stream examples and unit tests
! by Dannii

Constant HDR_SPECREVISION  $32;

Global gg_mainwin = 0;
Array gg_event --> 4;

Constant bufferlength = 200;
Array buffer buffer (bufferlength + 2)*WORDSIZE;

[ Main val done;

	#Ifdef TARGET_GLULX;
		@setiosys 2 0; ! select Glk I/O system

		! Open a text-buffer window, and select it as the current output stream.
		gg_mainwin = glk($0023, 0, 0, 0, 3, 0); ! glk_window_open
		glk($002F, gg_mainwin); ! glk_set_window
	#Endif; ! TARGET_GLULX

	print "eval() stream tests^^";
	
	Test();
	
	#Ifdef TARGET_ZCODE;
		@read_char 1 -> val;
	#Ifnot; ! TARGET_GLULX
		done = false;
		glk($00D2, gg_mainwin); ! request_char_event
		while (~~done) {
			glk($00C0, gg_event); ! select
			switch (gg_event-->0) {
				2: ! evtype_CharInput
					if (gg_event-->1 == gg_mainwin)
						done = true;
			}
		}
	#Endif; ! TARGET_

];

[ Version;
	! Print the version number
	print HDR_SPECREVISION->0, ".", HDR_SPECREVISION->1;
];

[ Gestalt zid gid arg val;

	! Check a gestalt value
	#Ifdef TARGET_ZCODE;
		@"EXT:30S" zid arg -> val;
	#Ifnot; ! TARGET_GLULX
		@gestalt gid arg val;
	#Endif; ! TARGET_
	
	return val;
];

[ PrintBuffer addr i len;
	#Ifdef TARGET_ZCODE;
	len = addr-->0;
	addr = addr + 2;
	#Ifnot; ! TARGET_GLULX
	len = buffer + (bufferlength + 1)*WORDSIZE;
	#Endif; ! TARGET_
	for (i=0: i < len: i++) print (char) addr->i;
];

#Ifdef TARGET_GLULX;
[ glk_gestalt _vararg_count ret;
  ! glk_gestalt(uint, uint) => uint
  @glk 4 _vararg_count ret;
  return ret;
];

[ glk_stream_close _vararg_count;
  ! glk_stream_close(stream, &{uint, uint})
  @glk 68 _vararg_count 0;
  return 0;
];

[ glk_stream_set_current _vararg_count;
  ! glk_stream_set_current(stream)
  @glk 71 _vararg_count 0;
  return 0;
];

[ glk_stream_open_eval _vararg_count ret;
  ! glk_stream_open_memory(nativechararray, arraylen, uint) => stream
  @glk $1100 _vararg_count ret;
  return ret;
];

[ glk_stream_open_eval_uni _vararg_count ret;
  ! glk_stream_open_memory(nativechararray, arraylen, uint) => stream
  @glk 313 _vararg_count ret;
  return ret;
];
#Endif;

[ Test val stream results;
	
	#Ifdef TARGET_ZCODE;
		! Check we're in a 1.2 version interpreter
		val = HDR_SPECREVISION-->0;
		if (val < $0102)
		{
			print "Stopping, interpreter is only version "; Version(); print ".^";
			return;
		}
	
		print "Ok, interpreter is version "; Version(); print ".^^";
	#Endif; ! TARGET_ZCODE

	! Checking for eval() stream support
	#Ifdef TARGET_ZCODE;
	val = Gestalt( $30, 0, 0 );
	#Ifnot; ! TARGET_GLULX
	val = 1;!glk( 4, $1100, 0 );
	#Endif; ! TARGET_
	if ( val == 0 )
	{
		print "Stopping, no support for the eval() stream.^";
		return;
	}
	
	#Ifdef TARGET_ZCODE;
	@output_stream 5 buffer;
	#Ifnot; ! TARGET_GLULX
	stream = glk_stream_open_eval_uni( buffer, bufferlength, 1,0 );
	glk_stream_set_current( stream );
	#Endif; ! TARGET_
	
	print "alert(~The eval() stream is supported.~);";
	
	print "navigator.userAgent";
	
	#Ifdef TARGET_ZCODE;
	@output_stream (-5);
	#Ifnot; ! TARGET_GLULX
	results = buffer + bufferlength*WORDSIZE;
	glk_stream_close( stream, results );
	glk( $002F, gg_mainwin );
	#Endif; ! TARGET_

	print "Your userAgent: "; PrintBuffer( buffer );
];
